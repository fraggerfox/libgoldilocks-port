Better arch detection.

--- configure.ac.orig	2019-12-04 21:55:31.000000000 +0000
+++ configure.ac
@@ -41,17 +41,23 @@ AC_CHECK_FUNCS([gettimeofday memmove mem
 
 AC_CANONICAL_HOST
 
-# default target arch is arch_32 which shall be generic enough to compile mostly on anything
-# target arch dirs:
-# availables: arch_32, arch_arm_32, arch_neon, arch_ref64, arch_x86_64
+dnl Check the machine architecture.
+AC_CANONICAL_HOST
+
 AS_CASE([$host_cpu],
+  [i?86], [ARCH_DIR=arch_32],
   [x86_64], [ARCH_DIR=arch_x86_64],
-  [arch64], [ARCH_DIR=arch_ref64],
-  [arm], [ARCH_DIR=arch_neon],
-  [ARCH_DIR=arch_32]
+  [amd64], [ARCH_DIR=arch_x86_64],
+  [armv6], [ARCH_DIR=arch_arm_32],
+  [armv7], [ARCH_DIR=arch_arm_32],
+  [aarch64], [ARCH_DIR=arch_ref64],
+  [AC_MSG_ERROR("No assembler code for CPU $host_cpu")]
 )
+
 AC_SUBST([ARCH_DIR])
 
+AM_CONDITIONAL([ARCH_X86], [test "x$ARCH_DIR" = xarch_x86_64] || [test "x$ARCH_DIR" = xarch_32])
+
 AX_CFLAGS_GCC_OPTION([-Wall])
 AX_CFLAGS_GCC_OPTION([-Wextra])
 AX_CFLAGS_GCC_OPTION([-Werror])
